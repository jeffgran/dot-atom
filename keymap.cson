# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# '.workspace':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
#
'body':
  'ctrl-g': 'unset!'
  
'*':
  'ctrl-cmd-o': 'fuzzy-finder:toggle-file-finder'

'atom-workspace':
  #'ctrl-o': 'fuzzy-finder:toggle-file-finder'
  'ctrl-o': 'advanced-open-file:toggle'
  'ctrl-g': 'core:cancel'
  # cursor-history
  'ctrl-<': 'cursor-history:prev'
  'ctrl->': 'cursor-history:next'
  'ctrl-,': 'cursor-history:prev-within-editor'
  'ctrl-.': 'cursor-history:next-within-editor'

  # tab-switcher
  'ctrl-v': 'tab-switcher:next'

  'ctrl-x p': 'project-manager:list-projects'
  
  # navigate
  'cmd-o': 'navigate:forward-new'
  
  # clipboard-plus (kill-ring)
  'cmd-ctrl-v': 'clipboard-plus:toggle'
  
'atom-text-editor.editor': 
  'tab': 'autocomplete-plus:activate'

'.advanced-open-file atom-text-editor.editor':
  'tab': 'advanced-open-file:autocomplete'
  'ctrl-,': 'advanced-open-file:delete-path-component'
  'ctrl-.': 'advanced-open-file:undo'

'atom-workspace atom-text-editor.editor':
  'ctrl-h': 'sublime-word-navigation:move-to-beginning-of-word'
  'ctrl-\'': 'sublime-word-navigation:move-to-end-of-word'
  
  'ctrl-j':  'core:move-left'
  'ctrl-;':  'core:move-right'
  'cmd->': 'core:move-to-bottom'
  'cmd-<': 'core:move-to-top'
  'ctrl-i': 'editor:move-to-first-character-of-line'
  'cmd-i':  'editor:auto-indent'
  'ctrl-l': 'go-to-line:toggle'

  'cmd-N': 'editor:duplicate-lines'
  'ctrl-#': 'editor:toggle-line-comments'

  'cmd-p': 'editor:move-line-up'
  'cmd-n': 'editor:move-line-down'
  #'cmd-P': 'editor:duplicate-lines' # command-pallette
  'ctrl-k': 'editor:cut-to-end-of-line'
  
  #'ctrl-c 0': 'editor:copy-path'
  #'ctrl-c 0': 'unset!'


  # from center-line
  'ctrl-cmd-i': 'center-line:toggle'

  # expand-region
  'cmd-space': 'expand-region:expand'

  # from selection-mode
  'ctrl-space': 'selection-mode:toggle-without-deselecting'

  # keyboard-scroll
  'ctrl-cmd-p': 'keyboard-scroll:scrollUpWithCursor'
  'ctrl-cmd-n': 'keyboard-scroll:scrollDownWithCursor'
  
  # find
  # 'ctrl-f': 'find-and-replace:show'
  # 'ctrl-r': 'find-and-replace:show'
  # 'cmd-f': 'find-and-replace:find-next-selected'
  
  # isearch
  'ctrl-f': 'isearch:search-forward'
  'ctrl-r': 'isearch:search-backward'

  # tab-switcher
  'ctrl-v': 'tab-switcher:next'


'ol.tab-switcher-tab-list':
  'ctrl-p': 'tab-switcher:previous'
  'ctrl-n': 'tab-switcher:next'


'atom-workspace atom-text-editor.editor.selection-mode':
  'ctrl-g': 'selection-mode:cancel'
  
# 'atom-workspace atom-text-editor.editor:not(.selection-mode)'
#   'ctrl-g': 'selection-mode:deselect' # <-- TODO implement that 

'atom-workspace atom-text-editor.editor.autocomplete-active':
  'ctrl-g': 'autocomplete-plus:cancel'


# 'atom-workspace.find-visible atom-text-editor.editor':
#   'ctrl-f': 'find-and-replace:find-next'
#   'ctrl-r': 'find-and-replace:find-previous'
#   'enter': 'find-and-replace:toggle'

'atom-workspace atom-text-editor.isearch':
  'ctrl-w': 'isearch:fill-cursor-word'
  'enter': 'core:confirm'
  'ctrl-g': 'isearch:cancel'
  'cmd-p': 'isearch:fill-history-prev'
  'cmd-n': 'isearch:fill-history-next'